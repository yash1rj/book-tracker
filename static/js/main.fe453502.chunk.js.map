{"version":3,"sources":["BooksAPI.js","store/books-context.js","components/ShelfChanger/ShelfChanger.js","components/Book/Book.js","components/BookShelf/BookShelf.js","components/Spinner/Spinner.js","components/Main/Main.js","components/Search/Search.js","App.js","reportWebVitals.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","BooksContext","React","createContext","books","loading","dropDownChanged","shelf","id","BooksContextProvider","props","useState","bookListData","setBookListData","isLoading","setIsLoading","fetchAllBooks","useCallback","fetch","then","res","json","data","useEffect","Provider","value","book","method","body","JSON","stringify","BooksAPI","children","ShelfChanger","useContext","className","onChange","event","target","disabled","Book","style","width","height","backgroundImage","imageLink","thumbnail","backgroundColor","title","authors","BookShelf","bookData","filteredBooks","filter","map","imageLinks","length","Spinner","Main","to","Search","searchResultsRendered","timeout","matchedBooks","setMatchedBooks","errorFlag","setErrorFlag","matchedBook","forEach","type","placeholder","searchText","clearTimeout","setTimeout","query","error","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe453502.chunk.js","sourcesContent":["const api = \"https://reactnd-books-api.udacity.com\";\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token;\r\nif (!token)\r\n    token = localStorage.token = Math.random().toString(36).substr(-8);\r\n\r\nconst headers = {\r\n    'Accept': 'application/json',\r\n    'Authorization': token\r\n};\r\n\r\nexport const get = (bookId) =>\r\n    fetch(`${api}/books/${bookId}`, { headers })\r\n        .then(res => res.json())\r\n        .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n    fetch(`${api}/books`, { headers })\r\n        .then(res => res.json())\r\n        .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n    fetch(`${api}/books/${book.id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            ...headers,\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ shelf })\r\n    })\r\n        .then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n    fetch(`${api}/search`, {\r\n        method: 'POST',\r\n        headers: {\r\n            ...headers,\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ query })\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => data.books)","import React, { useCallback, useEffect, useState } from 'react';\r\nimport * as  BooksAPI from '../BooksAPI';\r\n\r\nconst BooksContext = React.createContext({\r\n    books: [],\r\n    loading: false,\r\n    dropDownChanged: (shelf, id) => {}\r\n});\r\n\r\nexport const BooksContextProvider = props => {\r\n\r\n    const [bookListData, setBookListData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const fetchAllBooks = useCallback(() => {\r\n        setIsLoading(true);\r\n        BooksAPI.getAll()\r\n            .then(data => {\r\n                setIsLoading(false);\r\n                setBookListData(data);\r\n            });\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n        fetchAllBooks();\r\n    }, [fetchAllBooks]);\r\n\r\n    const dropDownChanged = (shelf, id) => {\r\n        BooksAPI.update({\r\n          id\r\n        }, shelf)\r\n            .then(() => {\r\n                fetchAllBooks();\r\n            });\r\n    };\r\n\r\n    return (\r\n        <BooksContext.Provider \r\n            value={{\r\n                books: bookListData,\r\n                loading: isLoading,\r\n                dropDownChanged\r\n            }}>\r\n            {props.children}\r\n        </BooksContext.Provider>\r\n    );\r\n};\r\n\r\nexport default BooksContext;","import React, { useContext } from 'react';\r\nimport './ShelfChanger.css';\r\nimport BooksContext from '../../store/books-context';\r\n\r\nconst ShelfChanger = props => {\r\n\r\n    const { dropDownChanged } = useContext(BooksContext);\r\n\r\n    const selectionChangedHandler = (event) => {\r\n        dropDownChanged(event.target.value, props.id);\r\n    };\r\n\r\n    return (\r\n        <div className=\"book-shelf-changer\">\r\n            <select value={props.shelf || \"none\"} onChange={selectionChangedHandler}>\r\n                <option value=\"move\" disabled>Move to...</option>\r\n                <option value=\"currentlyReading\">Currently Reading</option>\r\n                <option value=\"wantToRead\">Want to Read</option>\r\n                <option value=\"read\">Read</option>\r\n                <option value=\"none\">None</option>\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ShelfChanger;","import React from 'react';\r\nimport ShelfChanger from '../ShelfChanger/ShelfChanger';\r\nimport './Book.css';\r\n\r\nconst Book = props => {\r\n\r\n    return (\r\n        <li>\r\n            <div className=\"book\">\r\n                <div className=\"book-top\">\r\n                    <div className=\"book-cover\" style={{ width: 128, height: 170, backgroundImage: `url(\"${props.imageLink.thumbnail}\")`, backgroundColor: '#cccccc' }}></div>\r\n                    <ShelfChanger id={props.id} shelf={props.shelf} />\r\n                </div>\r\n                <div className=\"book-title\">{props.title || ''}</div>\r\n                <div className=\"book-authors\">{props.authors || ''}</div>\r\n            </div>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default Book;","import React from 'react';\r\nimport Book from '../Book/Book';\r\nimport './BookShelf.css';\r\n\r\nconst BookShelf = props => {\r\n\r\n    const { bookData, id } = props;\r\n\r\n    let filteredBookData = bookData.filter(book => book.shelf === id);\r\n\r\n    let filteredBooks = filteredBookData.map(book => {\r\n        return <Book\r\n            key={book.id}\r\n            id={book.id}\r\n            title={book.title}\r\n            authors={book.authors}\r\n            shelf={book.shelf}\r\n            imageLink={book.imageLinks || \"\"} />;\r\n    });\r\n\r\n    return (\r\n        <div className=\"bookshelf\">\r\n            <h2 className=\"bookshelf-title\">{props.title}</h2>\r\n            <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                    {(!filteredBooks || !filteredBooks.length) ? <h3>Loading...</h3> : filteredBooks}\r\n                </ol>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookShelf;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"spinnerContainer\"><div className=\"lds-dual-ring\" ></div></div>\r\n    );\r\n};\r\n\r\nexport default Spinner;","import React, { useContext } from 'react';\r\nimport './Main.css';\r\n\r\nimport BookShelf from '../BookShelf/BookShelf';\r\nimport { Link } from 'react-router-dom';\r\nimport BooksContext from '../../store/books-context';\r\nimport Spinner from '../Spinner/Spinner';\r\n\r\nconst Main = props => {\r\n\r\n    const { books, loading } = useContext(BooksContext);\r\n\r\n    return (\r\n        <div className=\"list-books\">\r\n            <div className=\"list-books-title\">\r\n                <h1>Book-Tracker</h1>\r\n            </div>\r\n            <div className=\"list-books-content\">\r\n                {loading && <Spinner />}\r\n                {books && !loading && (<div>\r\n                    <BookShelf id=\"currentlyReading\" title=\"Currently Reading\" bookData={books} />\r\n                    <BookShelf id=\"wantToRead\" title=\"Want to Read\" bookData={books} />\r\n                    <BookShelf id=\"read\" title=\"Read\" bookData={books} />\r\n                </div>)}\r\n            </div>\r\n            <div className=\"open-search\">\r\n                <Link to=\"/search\">\r\n                    <button>Add a book</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;","import React, { useContext, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Search.css';\r\nimport * as  BooksAPI from '../../BooksAPI';\r\nimport Book from '../Book/Book';\r\nimport BooksContext from '../../store/books-context';\r\n\r\nconst Search = props => {\r\n\r\n    const { books } = useContext(BooksContext);\r\n\r\n    let timeout = 0;\r\n    const [matchedBooks, setMatchedBooks] = useState();\r\n    const [errorFlag, setErrorFlag] = useState(0);\r\n\r\n    let searchResultsRendered;\r\n\r\n    const searchHandler = (event) => {\r\n        let searchText = event.target.value;\r\n        if (timeout) {\r\n            clearTimeout(timeout);\r\n        }\r\n        timeout = setTimeout(() => {\r\n            // console.log(searchText);\r\n            if(searchText) {\r\n                BooksAPI.search(searchText)\r\n                    .then(data => {\r\n                        if(data.error) {\r\n                            setErrorFlag(1);\r\n                        }\r\n                        else {\r\n                            setMatchedBooks(data);\r\n                            setErrorFlag(0);\r\n                        }\r\n                    });\r\n            }\r\n            else {\r\n                setMatchedBooks(null);\r\n                setErrorFlag(0);\r\n            }\r\n        }, 300);\r\n    };\r\n\r\n    if(!matchedBooks) {\r\n        searchResultsRendered = <h3>Waiting for input.</h3>;\r\n    }\r\n\r\n    if(errorFlag) {\r\n        searchResultsRendered = <h3>No results found !</h3>;\r\n    }\r\n\r\n    if(matchedBooks && !errorFlag) {\r\n        searchResultsRendered = matchedBooks.map(matchedBook => {\r\n            let shelf ='none';\r\n\r\n            books.forEach(book => {\r\n                if(book.id === matchedBook.id) {\r\n                    shelf = book.shelf;\r\n                }\r\n            });\r\n\r\n            return (<Book\r\n                key={matchedBook.id}\r\n                id={matchedBook.id}\r\n                title={matchedBook.title}\r\n                authors={matchedBook.authors}\r\n                shelf={shelf}\r\n                imageLink={matchedBook.imageLinks || \"\"} />\r\n            );\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n                <Link to=\"/\">\r\n                    <button className=\"close-search\">Close</button>\r\n                </Link>\r\n                <div className=\"search-books-input-wrapper\">\r\n                    {/*\r\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\r\n                  You can find these search terms here: SEARCH_TERMS.md\r\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\n                  you don't find a specific author or title. Every search is limited by search terms.\r\n                */}\r\n                    <input type=\"text\" placeholder=\"Search by title or author\" onChange={searchHandler} />\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"search-books-results\">\r\n                <ol className=\"books-grid\">\r\n                    {searchResultsRendered}\r\n                </ol>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport './App.css';\nimport Main from './components/Main/Main';\nimport Search from './components/Search/Search';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Switch>\n        <Route path=\"/\" exact>\n          <Main />\n        </Route>\n        <Route path=\"/search\" exact>\n          <Search />\n        </Route>\n        <Route path=\"*\">\n          <Main />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { BooksContextProvider } from './store/books-context';\n\nReactDOM.render(\n  <BooksContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </BooksContextProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}